#!/bin/bash

set -e

juju-log "Joining PDCM with Keystone at $JUJU_REMOTE_UNIT"

# Get the Keystone hostname
service_hostname=`relation-get service_hostname`

# Check if a valid Keystone hostname value was obtained
if [ -z "$service_hostname" ] ; then
   juju-log "No Keystone service hostname sent yet..."
   exit 0
fi

# Write a Keystone configuration file to zenoss user home directory
juju-log "Creating keystone credentials file in /home/zenoss/..."
touch /home/zenoss/keystone
echo "Keystone Credentials" >> /home/zenoss/keystone
echo "--------------------" >> /home/zenoss/keystone

keystone_creds=`relation-get`
echo "$keystone_creds" >> /home/zenoss/keystone

# Source the Zenoss environment variables
source /home/zenoss/zenoss_env

# Retrieve the rest of the keystone fields first
service_password=`relation-get service_password`
service_port=`relation-get service_port`
service_region=`relation-get service_region`
service_tenant_name=`relation-get service_tenant_name`
service_username=`relation-get service_username`
auth_url="http://$service_hostname:$service_port/v2.0"
endpoint_name="OpenStack"

# Deploy OpensStack endpoint device using zenbatchload
status-set maintenance "Deploying OpenStack endpoint."

echo "/Devices/OpenStack/Infrastructure loader='openstackinfrastructure', loader_arg_keys=['deviceName', 'username', 'api_key', 'project_id', 'auth_url', 'ceilometer_url', 'region_name', 'collector']" >> ImportOpenStackDevices
echo "$endpoint_name username='$service_username', api_key='$service_password', project_id='$service_tenant_name', auth_url='$auth_url', region_name='$service_region'" >> ImportOpenStackDevices
zenbatchload ImportOpenStackDevices

# Delete the file
rm -f ImportOpenStackDevices

# Set active state
status-set active "OpenStack Endpoint deployed successfully."
